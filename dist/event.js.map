{"version":3,"file":"event.js","sourceRoot":"","sources":["../src/event.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAC1B,0DAAiD;AACjD,8BAA4B;AAC5B,0DAA6D;AAGhD,QAAA,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;AAG/C,SAAgB,KAAK,CAAC,SAA4B;IAE9C,mBAAK,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,cAAc,EAAE,CAAC;IAE/C,IAAI,SAAS,GAAkB,IAAI,CAAC;IAEpC,IAAI,OAAO,SAAS,KAAK,QAAQ;QAC7B,SAAS,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC;SAC5B,IAAI,OAAO,SAAS,KAAK,UAAU;QACpC,SAAS,GAAY,SAAU,CAAC,WAAW,EAAE,CAAC;;QAE9C,MAAM,IAAI,+BAAiB,CAAC,WAAW,EAAE,8DAA8D,CAAC,CAAC;IAE7G,OAAO,CAAC,MAAgB,EAAE,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,mBAAW,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;AACxF,CAAC;AAdD,sBAcC","sourcesContent":["import \"reflect-metadata\";\nimport { given } from \"@nivinjoseph/n-defensive\";\nimport \"@nivinjoseph/n-ext\";\nimport { ArgumentException } from \"@nivinjoseph/n-exception\";\n\n\nexport const eventSymbol = Symbol(\"eventName\");\n\n// public\nexport function event(eventType: Function | string): Function\n{\n    given(eventType, \"eventType\").ensureHasValue();\n    \n    let eventName: string | null = null;\n    \n    if (typeof eventType === \"string\")\n        eventName = eventType.trim();\n    else if (typeof eventType === \"function\")\n        eventName = (<Object>eventType).getTypeName();\n    else\n        throw new ArgumentException(\"eventType\", \"must be an event class(Function) or event class name(string)\");\n\n    return (target: Function) => Reflect.defineMetadata(eventSymbol, eventName, target);\n}"]}