{"version":3,"file":"in-memory-event-bus.js","sourceRoot":"","sources":["../../src/in-memory-implementation/in-memory-event-bus.ts"],"names":[],"mappings":";;;;;;;;;;AAEA,0DAAiD;AACjD,0DAAmE;AAGnE,MAAa,gBAAgB;IAA7B;QAEY,gBAAW,GAAG,KAAK,CAAC;QACpB,eAAU,GAA0B,IAAW,CAAC;IAuC5D,CAAC;IApCgB,OAAO,CAAC,KAAe;;YAEhC,IAAI,IAAI,CAAC,WAAW;gBAChB,MAAM,IAAI,qCAAuB,CAAC,IAAI,CAAC,CAAC;YAE5C,mBAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,cAAc,EAAE;iBACjC,kBAAkB,CAAC;gBAChB,EAAE,EAAE,QAAQ;gBACZ,IAAI,EAAE,QAAQ;aACjB,CAAC,CAAC;YAEP,mBAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,4CAA4C,CAAC,CAAC;YAE9F,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC;KAAA;IAEM,SAAS,CAAC,QAA+B;QAE5C,IAAI,IAAI,CAAC,WAAW;YAChB,MAAM,IAAI,qCAAuB,CAAC,IAAI,CAAC,CAAC;QAE5C,mBAAK,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,cAAc,EAAE,CAAC,gBAAgB,EAAE,CAAC;QAChE,mBAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,2CAA2C,CAAC,CAAC;QAE5F,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;IAC/B,CAAC;IAEY,OAAO;;YAEhB,IAAI,IAAI,CAAC,WAAW;gBAChB,OAAO;YAEX,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAExB,IAAI,CAAC,UAAU,GAAG,IAAW,CAAC;QAClC,CAAC;KAAA;CACJ;AA1CD,4CA0CC","sourcesContent":["import { EventBus } from \"../event-bus\";\nimport { EdaEvent } from \"../eda-event\";\nimport { given } from \"@nivinjoseph/n-defensive\";\nimport { ObjectDisposedException } from \"@nivinjoseph/n-exception\";\n\n// public\nexport class InMemoryEventBus implements EventBus\n{\n    private _isDisposed = false;\n    private _onPublish: (e: EdaEvent) => void = null as any;\n    \n    \n    public async publish(event: EdaEvent): Promise<void>\n    {\n        if (this._isDisposed)\n            throw new ObjectDisposedException(this);\n        \n        given(event, \"event\").ensureHasValue()\n            .ensureHasStructure({\n                id: \"string\",\n                name: \"string\",\n            });   \n        \n        given(this, \"this\").ensure(t => !!t._onPublish, \"onPublish callback has not been registered\");\n        \n        this._onPublish(event);\n    }\n    \n    public onPublish(callback: (e: EdaEvent) => void): void\n    {\n        if (this._isDisposed)\n            throw new ObjectDisposedException(this);\n        \n        given(callback, \"callback\").ensureHasValue().ensureIsFunction();\n        given(this, \"this\").ensure(t => !t._onPublish, \"setting onPublish callback more than once\");\n        \n        this._onPublish = callback;\n    }\n    \n    public async dispose(): Promise<void>\n    {\n        if (this._isDisposed)\n            return;\n        \n        this._isDisposed = true;\n        \n        this._onPublish = null as any;\n    }\n}"]}